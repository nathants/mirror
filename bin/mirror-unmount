#!/bin/bash
set -eou pipefail

confirm() {
    (echo -e "\nproceed? y/n" && read -n1 answer && echo && [ $answer = y ] && echo -e '\nproceeding...\n' || (echo -e '\naborting...\n' && exit 1))
}

if [ ! -f ~/.mirror ]; then
    echo fatal: no ~/.mirror file found. add disk identifiers to this file, from: sudo fdisk -l
    exit 1
fi

drives=$(cat ~/.mirror | while read uuid; do
    if ! sudo fdisk -l | grep $uuid -A3 | grep 'Linux filesystem' | awk '{print $1}'; then
        echo drive not found: $uuid 1>&2
        echo 1>&2
    fi
done)

mk-cryptname() {
    echo $1 | awk -F'/' '{print $NF}' | head -c3
}

mk-mount() {
    echo $(realpath ~/mnt.$1)
}

drives=$(echo "$drives" | while read drive; do
    cryptname=$(mk-cryptname $drive)
    mount=$(mk-mount $cryptname)
    if df | awk '{print $NF}' | grep ${mount} &>/dev/null; then
        echo $drive
    fi
done)

if [ -z "$drives" ]; then
    echo nothing to unmount 1>&2
    exit 1
fi

echo going to unmount and lock:
for drive in $drives; do
    if ! echo $drive | grep ^/dev/sd[a-z]1 &>/dev/null; then
        echo fatal: only /dev/sdX1 is supported, got: $drive
        exit 1
    fi
    cryptname=$(mk-cryptname $drive)
    mount=$(mk-mount $cryptname)
    echo
    echo " " $(sudo fdisk -l | grep ^$drive)
    echo "   " cryptname: $cryptname
    echo "   " mount: $mount
done

confirm

for drive in $drives; do
    cryptname=$(mk-cryptname $drive)
    mount=$(mk-mount $cryptname)
    sudo umount $mount
done

for drive in $drives; do
    cryptname=$(mk-cryptname $drive)
    mount=$(mk-mount $cryptname)
    sudo cryptsetup close $cryptname
done
